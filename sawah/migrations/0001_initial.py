# Generated by Django 5.0.2 on 2024-06-11 17:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.CharField(max_length=200, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d', verbose_name='image')),
                ('available', models.BooleanField(default=True, verbose_name='available')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sawah.city')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HotelComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('story', models.CharField(blank=True, max_length=200, null=True)),
                ('travel_with', models.CharField(blank=True, choices=[('family', 'Family'), ('partner', 'Partner'), ('work', 'Work'), ('friends', 'Friends')], max_length=10, null=True)),
                ('travel_date', models.DateField(blank=True, null=True)),
                ('best_time', models.CharField(blank=True, choices=[('summer', 'Summer'), ('winter', 'Winter'), ('spring', 'Spring'), ('autumn', 'Autumn')], max_length=10, null=True)),
                ('advice', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_comments', to='sawah.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HotelRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_rating', to='sawah.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Landmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.CharField(max_length=200, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d', verbose_name='image')),
                ('available', models.BooleanField(default=True, verbose_name='available')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sawah.city')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LandmarkComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('story', models.CharField(blank=True, max_length=200, null=True)),
                ('travel_with', models.CharField(blank=True, choices=[('family', 'Family'), ('partner', 'Partner'), ('work', 'Work'), ('friends', 'Friends')], max_length=10, null=True)),
                ('travel_date', models.DateField(blank=True, null=True)),
                ('best_time', models.CharField(blank=True, choices=[('summer', 'Summer'), ('winter', 'Winter'), ('spring', 'Spring'), ('autumn', 'Autumn')], max_length=10, null=True)),
                ('advice', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('landmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='landmark_comments', to='sawah.landmark')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LandmarkRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('landmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='landmark_rating', to='sawah.landmark')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.CharField(max_length=200, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d', verbose_name='image')),
                ('available', models.BooleanField(default=True, verbose_name='available')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sawah.city')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RestaurantComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('story', models.CharField(blank=True, max_length=200, null=True)),
                ('travel_with', models.CharField(blank=True, choices=[('family', 'Family'), ('partner', 'Partner'), ('work', 'Work'), ('friends', 'Friends')], max_length=10, null=True)),
                ('travel_date', models.DateField(blank=True, null=True)),
                ('best_time', models.CharField(blank=True, choices=[('summer', 'Summer'), ('winter', 'Winter'), ('spring', 'Spring'), ('autumn', 'Autumn')], max_length=10, null=True)),
                ('advice', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurants_comments', to='sawah.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RestaurantRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_rating', to='sawah.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['id', 'slug'], name='sawah_hotel_id_e4a4e3_idx'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['name'], name='sawah_hotel_name_0e6276_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='hotelrating',
            unique_together={('user', 'hotel')},
        ),
        migrations.AlterIndexTogether(
            name='hotelrating',
            index_together={('user', 'hotel')},
        ),
        migrations.AddIndex(
            model_name='landmark',
            index=models.Index(fields=['id', 'slug'], name='sawah_landm_id_978f60_idx'),
        ),
        migrations.AddIndex(
            model_name='landmark',
            index=models.Index(fields=['name'], name='sawah_landm_name_ae8457_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='landmarkrating',
            unique_together={('user', 'landmark')},
        ),
        migrations.AlterIndexTogether(
            name='landmarkrating',
            index_together={('user', 'landmark')},
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['id', 'slug'], name='sawah_resta_id_c874ce_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['name'], name='sawah_resta_name_a1d17b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='restaurantrating',
            unique_together={('user', 'restaurant')},
        ),
        migrations.AlterIndexTogether(
            name='restaurantrating',
            index_together={('user', 'restaurant')},
        ),
    ]
